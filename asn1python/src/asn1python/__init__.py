"""
ASN.1 Python Runtime Library

This module provides ASN.1-specific types and operations for Python code generation.
Generated by asn1scc - the ASN.1 compiler of the European Space Agency (ESA).
"""

from .asn1_types import (
    # Sized integer types
    UInt8, UInt16, UInt32, UInt64,
    Int8, Int16, Int32, Int64,

    # ASN.1 semantic types
    Asn1Real, Asn1Boolean, NullType,
    Asn1ObjectIdentifier,

    # Time types
    Asn1Date, Asn1LocalTime, Asn1UtcTime,
    Asn1TimeWithTimeZone, Asn1DateLocalTime,
    Asn1DateUtcTime, Asn1DateTimeWithTimeZone,

    # Error handling
    Asn1Error, Asn1ValueError, Asn1OverflowError,

    Asn1Base
)

from .bitstream import BitStream, BitStreamError

from .codec import (
    Codec, EncodeResult, DecodeResult, ErrorCode,
    ENCODE_OK, DECODE_OK, ERROR_INSUFFICIENT_DATA,
    ERROR_INVALID_VALUE, ERROR_CONSTRAINT_VIOLATION,
)

from .codec_uper import UPERCodec
from .codec_acn import ACNCodec
# from .codec_xer import XERCodec
# from .codec_ber import BERCodec
# from .codec_per import PERCodec

from .helper import (
    calculate_asn1_int_size_in_bytes,
    get_number_of_bits_for_non_negative_integer,
    bit_string_to_byte_array,
    byte_array_to_bit_string,
    Asn1SccError,
)

from .vector import Asn1Vector
from .verification import (
    validate_integer_constraints,
    validate_string_constraints,
    validate_sequence_constraints,
)

__version__ = "1.0.0"
__author__ = "ASN.1 SCC Team"
__description__ = "ASN.1 runtime library for Python"

__all__ = [
    # Types
    "UInt8", "UInt16", "UInt32", "UInt64",
    "Int8", "Int16", "Int32", "Int64",
    "Asn1Real", "Asn1Boolean", "NullType",
    "Asn1ObjectIdentifier",
    "Asn1Date", "Asn1LocalTime", "Asn1UtcTime",
    "Asn1TimeWithTimeZone", "Asn1DateLocalTime",
    "Asn1DateUtcTime", "Asn1DateTimeWithTimeZone",
    
    # Base Class
    "Asn1Base",

    # Errors
    "Asn1Error", "Asn1ValueError", "Asn1OverflowError",

    # Bitstream
    "BitStream", "BitStreamError",

    # Codecs
    "Codec", "EncodeResult", "DecodeResult", "ErrorCode",
    "UPERCodec", "ACNCodec", #"XERCodec", "BERCodec", "PERCodec",

    # Constants
    "ENCODE_OK", "DECODE_OK", "ERROR_INSUFFICIENT_DATA",
    "ERROR_INVALID_VALUE", "ERROR_CONSTRAINT_VIOLATION",

    # Helpers
    "calculate_asn1_int_size_in_bytes",
    "get_number_of_bits_for_non_negative_integer",
    "bit_string_to_byte_array",
    "byte_array_to_bit_string",
    "Asn1SccError",

    # Vector and validation
    "Asn1Vector",
    "validate_integer_constraints",
    "validate_string_constraints",
    "validate_sequence_constraints",
]